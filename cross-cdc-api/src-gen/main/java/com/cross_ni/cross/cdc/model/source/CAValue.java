/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.cross_ni.cross.cdc.model.source;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** TODO */
@org.apache.avro.specific.AvroGenerated
public class CAValue extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2458303188325318670L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CAValue\",\"namespace\":\"com.cross_ni.cross.cdc.model.source\",\"doc\":\"TODO\",\"fields\":[{\"name\":\"__op\",\"type\":{\"type\":\"enum\",\"name\":\"Operation\",\"doc\":\"TODO\",\"symbols\":[\"c\",\"r\",\"u\",\"d\"]}},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"definition\",\"type\":{\"type\":\"record\",\"name\":\"CADefinition\",\"doc\":\"TODO\",\"fields\":[{\"name\":\"class\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"attributeName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CAValue> ENCODER =
      new BinaryMessageEncoder<CAValue>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CAValue> DECODER =
      new BinaryMessageDecoder<CAValue>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CAValue> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CAValue> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CAValue> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CAValue>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CAValue to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CAValue from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CAValue instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CAValue fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private com.cross_ni.cross.cdc.model.source.Operation __op;
   private java.lang.String value;
   private com.cross_ni.cross.cdc.model.source.CADefinition definition;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CAValue() {}

  /**
   * All-args constructor.
   * @param __op The new value for __op
   * @param value The new value for value
   * @param definition The new value for definition
   */
  public CAValue(com.cross_ni.cross.cdc.model.source.Operation __op, java.lang.String value, com.cross_ni.cross.cdc.model.source.CADefinition definition) {
    this.__op = __op;
    this.value = value;
    this.definition = definition;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return __op;
    case 1: return value;
    case 2: return definition;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: __op = (com.cross_ni.cross.cdc.model.source.Operation)value$; break;
    case 1: value = value$ != null ? value$.toString() : null; break;
    case 2: definition = (com.cross_ni.cross.cdc.model.source.CADefinition)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the '__op' field.
   * @return The value of the '__op' field.
   */
  public com.cross_ni.cross.cdc.model.source.Operation getOp$1() {
    return __op;
  }


  /**
   * Sets the value of the '__op' field.
   * @param value the value to set.
   */
  public void setOp$1(com.cross_ni.cross.cdc.model.source.Operation value) {
    this.__op = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public java.lang.String getValue() {
    return value;
  }


  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.String value) {
    this.value = value;
  }

  /**
   * Gets the value of the 'definition' field.
   * @return The value of the 'definition' field.
   */
  public com.cross_ni.cross.cdc.model.source.CADefinition getDefinition() {
    return definition;
  }


  /**
   * Sets the value of the 'definition' field.
   * @param value the value to set.
   */
  public void setDefinition(com.cross_ni.cross.cdc.model.source.CADefinition value) {
    this.definition = value;
  }

  /**
   * Creates a new CAValue RecordBuilder.
   * @return A new CAValue RecordBuilder
   */
  public static com.cross_ni.cross.cdc.model.source.CAValue.Builder newBuilder() {
    return new com.cross_ni.cross.cdc.model.source.CAValue.Builder();
  }

  /**
   * Creates a new CAValue RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CAValue RecordBuilder
   */
  public static com.cross_ni.cross.cdc.model.source.CAValue.Builder newBuilder(com.cross_ni.cross.cdc.model.source.CAValue.Builder other) {
    if (other == null) {
      return new com.cross_ni.cross.cdc.model.source.CAValue.Builder();
    } else {
      return new com.cross_ni.cross.cdc.model.source.CAValue.Builder(other);
    }
  }

  /**
   * Creates a new CAValue RecordBuilder by copying an existing CAValue instance.
   * @param other The existing instance to copy.
   * @return A new CAValue RecordBuilder
   */
  public static com.cross_ni.cross.cdc.model.source.CAValue.Builder newBuilder(com.cross_ni.cross.cdc.model.source.CAValue other) {
    if (other == null) {
      return new com.cross_ni.cross.cdc.model.source.CAValue.Builder();
    } else {
      return new com.cross_ni.cross.cdc.model.source.CAValue.Builder(other);
    }
  }

  /**
   * RecordBuilder for CAValue instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CAValue>
    implements org.apache.avro.data.RecordBuilder<CAValue> {

    private com.cross_ni.cross.cdc.model.source.Operation __op;
    private java.lang.String value;
    private com.cross_ni.cross.cdc.model.source.CADefinition definition;
    private com.cross_ni.cross.cdc.model.source.CADefinition.Builder definitionBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.cross_ni.cross.cdc.model.source.CAValue.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.__op)) {
        this.__op = data().deepCopy(fields()[0].schema(), other.__op);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.value)) {
        this.value = data().deepCopy(fields()[1].schema(), other.value);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.definition)) {
        this.definition = data().deepCopy(fields()[2].schema(), other.definition);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasDefinitionBuilder()) {
        this.definitionBuilder = com.cross_ni.cross.cdc.model.source.CADefinition.newBuilder(other.getDefinitionBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing CAValue instance
     * @param other The existing instance to copy.
     */
    private Builder(com.cross_ni.cross.cdc.model.source.CAValue other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.__op)) {
        this.__op = data().deepCopy(fields()[0].schema(), other.__op);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.value)) {
        this.value = data().deepCopy(fields()[1].schema(), other.value);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.definition)) {
        this.definition = data().deepCopy(fields()[2].schema(), other.definition);
        fieldSetFlags()[2] = true;
      }
      this.definitionBuilder = null;
    }

    /**
      * Gets the value of the '__op' field.
      * @return The value.
      */
    public com.cross_ni.cross.cdc.model.source.Operation getOp$1() {
      return __op;
    }


    /**
      * Sets the value of the '__op' field.
      * @param value The value of '__op'.
      * @return This builder.
      */
    public com.cross_ni.cross.cdc.model.source.CAValue.Builder setOp$1(com.cross_ni.cross.cdc.model.source.Operation value) {
      validate(fields()[0], value);
      this.__op = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the '__op' field has been set.
      * @return True if the '__op' field has been set, false otherwise.
      */
    public boolean hasOp$1() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the '__op' field.
      * @return This builder.
      */
    public com.cross_ni.cross.cdc.model.source.CAValue.Builder clearOp$1() {
      __op = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public java.lang.String getValue() {
      return value;
    }


    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public com.cross_ni.cross.cdc.model.source.CAValue.Builder setValue(java.lang.String value) {
      validate(fields()[1], value);
      this.value = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public com.cross_ni.cross.cdc.model.source.CAValue.Builder clearValue() {
      value = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'definition' field.
      * @return The value.
      */
    public com.cross_ni.cross.cdc.model.source.CADefinition getDefinition() {
      return definition;
    }


    /**
      * Sets the value of the 'definition' field.
      * @param value The value of 'definition'.
      * @return This builder.
      */
    public com.cross_ni.cross.cdc.model.source.CAValue.Builder setDefinition(com.cross_ni.cross.cdc.model.source.CADefinition value) {
      validate(fields()[2], value);
      this.definitionBuilder = null;
      this.definition = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'definition' field has been set.
      * @return True if the 'definition' field has been set, false otherwise.
      */
    public boolean hasDefinition() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'definition' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.cross_ni.cross.cdc.model.source.CADefinition.Builder getDefinitionBuilder() {
      if (definitionBuilder == null) {
        if (hasDefinition()) {
          setDefinitionBuilder(com.cross_ni.cross.cdc.model.source.CADefinition.newBuilder(definition));
        } else {
          setDefinitionBuilder(com.cross_ni.cross.cdc.model.source.CADefinition.newBuilder());
        }
      }
      return definitionBuilder;
    }

    /**
     * Sets the Builder instance for the 'definition' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.cross_ni.cross.cdc.model.source.CAValue.Builder setDefinitionBuilder(com.cross_ni.cross.cdc.model.source.CADefinition.Builder value) {
      clearDefinition();
      definitionBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'definition' field has an active Builder instance
     * @return True if the 'definition' field has an active Builder instance
     */
    public boolean hasDefinitionBuilder() {
      return definitionBuilder != null;
    }

    /**
      * Clears the value of the 'definition' field.
      * @return This builder.
      */
    public com.cross_ni.cross.cdc.model.source.CAValue.Builder clearDefinition() {
      definition = null;
      definitionBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CAValue build() {
      try {
        CAValue record = new CAValue();
        record.__op = fieldSetFlags()[0] ? this.__op : (com.cross_ni.cross.cdc.model.source.Operation) defaultValue(fields()[0]);
        record.value = fieldSetFlags()[1] ? this.value : (java.lang.String) defaultValue(fields()[1]);
        if (definitionBuilder != null) {
          try {
            record.definition = this.definitionBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("definition"));
            throw e;
          }
        } else {
          record.definition = fieldSetFlags()[2] ? this.definition : (com.cross_ni.cross.cdc.model.source.CADefinition) defaultValue(fields()[2]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CAValue>
    WRITER$ = (org.apache.avro.io.DatumWriter<CAValue>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CAValue>
    READER$ = (org.apache.avro.io.DatumReader<CAValue>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeEnum(this.__op.ordinal());

    if (this.value == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.value);
    }

    this.definition.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.__op = com.cross_ni.cross.cdc.model.source.Operation.values()[in.readEnum()];

      if (in.readIndex() != 1) {
        in.readNull();
        this.value = null;
      } else {
        this.value = in.readString();
      }

      if (this.definition == null) {
        this.definition = new com.cross_ni.cross.cdc.model.source.CADefinition();
      }
      this.definition.customDecode(in);

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.__op = com.cross_ni.cross.cdc.model.source.Operation.values()[in.readEnum()];
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.value = null;
          } else {
            this.value = in.readString();
          }
          break;

        case 2:
          if (this.definition == null) {
            this.definition = new com.cross_ni.cross.cdc.model.source.CADefinition();
          }
          this.definition.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










